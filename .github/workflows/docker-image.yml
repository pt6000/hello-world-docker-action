name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}   
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag pt6000/hello-world-docker-action:latest
      
    - name: docker push
      run: |
        docker push pt6000/hello-world-docker-action
        
    - name: Tag the image
      run: |
        docker tag pt6000/hello-world-docker-action:latest pt6000/dct-demo-23:1
        docker push pt6000/dct-demo-23:1


    - name: Link to the network drive
      run: |  
        sudo mkdir /TarDir
        sudo mount -t cifs //githubreporelstorage.file.core.windows.net/sharefile /TarDir -o vers=3.0,username=githubreporelstorage,password=${{ secrets.AZURE_PASS }},dir_mode=0777,file_mode=0777
    #    cp action.yml action_new.yml
    #    ls

    - name: Tar and copy the image for transferring
      run: | 
        docker save pt6000/dct-demo-23:1 | gzip > dct-demo-23:1.tar.gz
        cp dct-demo-23:1.tar.gz /TarDir
          
    - name: sleep
      run: |
          sleep 45

    - name: Create Code Signing Certificate and Cert Key
      run: |
          echo "${{secrets.CERTIFICATE_KEY}}" > cert_key_15.key
          chmod 600 cert_key_15.key
          echo "${{secrets.CERTIFICATE}}" > cert_15.crt
          chmod 600 cert_15.crt         
      #    apt-get update       
      #    apt-get install libnss3-tools
      #   certutil -decode cert_key.txt cert_key.key
      #   mkdir certificate
          
    - name: Load the Cert key
      run: |
       docker trust key load cert_key_15.key --name dock_cert_key_15 <<-EOF
         ${{ secrets.CERTIFICATE_PASS }}
         ${{ secrets.CERTIFICATE_PASS }}
       EOF
       
    - name: Add signer
      run: |
        { echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}';
          echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}';
          sleep 15 && echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}';
          echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}';
        } | docker trust signer add --key cert_15.crt dock_cert_key_15 pt6000/dct-demo-23:1         


    
    - name: Tar and copy the image for transferring
      run: | 
        docker save pt6000/dct-demo-23:1 | gzip > dct-demo-23:1.tar.gz
        cp dct-demo-23:1.tar.gz /TarDir
          
    - name: sleep
      run: |
          sleep 30 
      
      
    - name: Sign the image
      run: |
        docker trust sign pt6000/dct-demo-23:1 <<EOF
         ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
         ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
         EOF     
        
    - name: Push the signed image
      run: |    
        docker push pt6000/dct-demo-23:1

    - name: DCT On
      run: |      
        export DOCKER_CONTENT_TRUST=1  
      
    - name: Pull the unsigned image (fail) 
      run: |    
        docker pull pt6000/dct-demo-23:1    

  #  - name: DCT Off
  #    run: |      
  #      export DOCKER_CONTENT_TRUST=0 
      
  #  - name: Pull the unsigned image (pass)
  #    run: |    
  #      docker pull pt6000/dct-demo-17:1    
  
          
    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: pt6000/dct-demo-23:1       
  
    - name: sleep
      run: |
          sleep 30
        
    - name: Tar and copy the image for transferring
      run: | 
        docker save pt6000/dct-demo-23:1 | gzip > dct-demo-23:1.tar.gz
        cp dct-demo-23:1.tar.gz /TarDir
        ls
        echo "$DOCKER_CONTENT_TRUST"
