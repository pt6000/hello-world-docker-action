name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}   
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag pt6000/hello-world-docker-action:latest
      
    - name: docker push
      run: |
        docker push pt6000/hello-world-docker-action
        
    - name: Tag the image
      run: |
        docker tag pt6000/hello-world-docker-action:latest pt6000/dct-demo-6:1
        docker push pt6000/dct-demo-6:1
   
       
    - name: Create Code Signing Certificate and Cert Key
      run: |
          echo "${{secrets.CERTIFICATE_KEY}}" > cert_key.key
          chmod 600 cert_key.key
          echo "${{secrets.CERTIFICATE}}" > cert.crt
          chmod 600 cert.crt         
      #    apt-get update       
      #    apt-get install libnss3-tools
      #   certutil -decode cert_key.txt cert_key.key
      #   mkdir certificate
          
    - name: Load the Cert key
      run: |
       docker trust key load cert_key.key --name dock_cert_key <<EOF
         ${{ secrets.CERTIFICATE_PASS }}
         ${{ secrets.CERTIFICATE_PASS }}
       EOF
       
    - name: Add signer
      run: |
        docker trust signer add --key cert.crt dock_cert_key pt6000/dct-demo-6:1 <<-EOF
          ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          ${{ secrets.CERTIFICATE_PASS }}
        EOF
#    Set-Content -Path certificate\certificate.txt -Value '${{secrets.CERTIFICATE}}'
      #    certutil -decode certificate\certificate.txt certificate\certificate.pfx

      #  docker trust signer add --key /keys/server.crt cert_key pt6000/dct-demo-5:1-<<EOF  
        #docker trust signer add --key /keys/server.crt my_key pt6000/dct-demo-5:1-<<EOF
     #docker trust signer add --key /home/runner/work/hello-world-docker-action/hello-world-docker-action/test_key_6.pub test_key_6 pt6000/dct-demo-6:1 <<EOF
 #   - name: Generate key
 #     run: |
 #       docker trust key generate test_key_7 <<EOF
 #        ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
 #        ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
 #        EOF
         
         
#    - name: Add signer
#      run: |
#        docker trust signer add --key test_key_7.pub test_key_7 pt6000/dct-demo-6:1 <<EOF
#          ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#          ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#          ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#          EOF
       
    - name: Tag the signed image
      run: |
       docker tag pt6000/dct-demo-6:1 pt6000/dct-demo-6:1-signed
        
    - name: Sign the image
      run: |
        docker trust sign pt6000/dct-demo-6:1-signed <<EOF
         ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
         ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
         EOF     
        
    - name: Push the signed image
      run: |    
        docker push pt6000/dct-demo-6:1-signed

    - name: DCT On
      run: |      
        export DOCKER_CONTENT_TRUST=1  
        
    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: pt6000/dct-demo-6:1
        
        
        
